// LESS CSS Block Grid

// --- Content ---
// 1. Variables
// 2. CSS
// 3. Mixins
// 4. Grid item proportions generator
// 5. Clearfix mixin



// --- 1. Variables ---

@include-html-classes:  true;
@gutter-width:          14px;
@max-columns:           12;
@grid-start:            600px;
@large-grid-start:      1025px;


// --- 2. CSS ---

.fgrid when (@include-html-classes) {

  // Row

  .fgrid-row();

  // Items

  .fgrid-item {
    .fgrid-item-base();
  }

  // Items proportions

  .generate-default-grid-proportions();

  @media screen and (min-width: @large-grid-start) {
    .generate-breakpoints-grid-proportions(large);
  };
}


// --- 3. Mixins ---

// Rows and columns CSS

.fgrid-row() {
  margin: 0 0 0 -(@gutter-width/2);
  padding: 0;
  .clearfix;
}

.fgrid-item-base() {
  box-sizing: border-box;
  float: left;
  padding: 0 @gutter-width/2;
  margin: 0;
  list-style-type: none;
}

.fgrid-item-proportion(@items-per-row) {
  width: percentage(1/@items-per-row);
  padding-right: @gutter-width/2;
  clear: none;

  &:nth-of-type(@{items-per-row}n) {
    padding-right: 0;
  }

  &:nth-of-type(@{items-per-row}n+1) {
    clear: left;
  }
}


// --- 4. Grid item proportions generator ---

// Items for default values
// (IE. .fgrid-2 > .fgrid-item  { width: 50%; } …)

.generate-default-grid-proportions(@index: 2) when (@index < (@max-columns + 1)) {
  &-@{index} > &-item {
    .fgrid-item-proportion(@index);
  }

  .generate-default-grid-proportions(@index + 1);
}

// Items for breakpoint values (large etc.)
// (IE. .fgrid-large-2 > .fgrid-item  { width: 50%; } …)

.generate-breakpoints-grid-proportions(@size, @index: 2) when (@index < (@max-columns + 1)) {
  &-@{size}-@{index} > &-item {
    .fgrid-item-proportion(@index);
  }

  .generate-breakpoints-grid-proportions(@size, @index + 1);
}


// --- 5. Clearfix mixin  ---

// (remove if you use your own)
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
